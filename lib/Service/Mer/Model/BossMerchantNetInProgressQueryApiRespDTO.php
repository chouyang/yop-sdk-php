<?php
/**
 * BossMerchantNetInProgressQueryApiRespDTO
 *
 * PHP version 5
 *
 * @category Class
 * @package  Yeepay\Yop\Sdk\
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * 子商户管理
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.13
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Yeepay\Yop\Sdk\Service\Mer\Model;

use \ArrayAccess;
use Yeepay\Yop\Sdk\Model\ModelInterface;
use Yeepay\Yop\Sdk\Utils\ObjectSerializer;

/**
 * BossMerchantNetInProgressQueryApiRespDTO Class Doc Comment
 *
 * @category Class
 * @description 老板管账特约商户入网进度查询返回结果
 * @package  Yeepay\Yop\Sdk\
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class BossMerchantNetInProgressQueryApiRespDTO implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'BossMerchantNetInProgressQueryApiRespDTO';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'code' => 'string',
        'msg' => 'string',
        'auditOpinion' => 'string',
        'applicationStatus' => 'string',
        'applicationNo' => 'string',
        'progressDescription' => 'string',
        'requestNo' => 'string',
        'merchantNo' => 'string',
        'divideApplicationStatus' => 'string',
        'publicAccountInfo' => '\Yeepay\Yop\Sdk\Service\Mer\Model\PublicAccountCallBackInfo',
        'receiverInfo' => '\Yeepay\Yop\Sdk\Service\Mer\Model\ReceiverCallbackInfo[]'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'code' => null,
        'msg' => null,
        'auditOpinion' => null,
        'applicationStatus' => null,
        'applicationNo' => null,
        'progressDescription' => null,
        'requestNo' => null,
        'merchantNo' => null,
        'divideApplicationStatus' => null,
        'publicAccountInfo' => null,
        'receiverInfo' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'code' => 'code',
        'msg' => 'msg',
        'auditOpinion' => 'auditOpinion',
        'applicationStatus' => 'applicationStatus',
        'applicationNo' => 'applicationNo',
        'progressDescription' => 'progressDescription',
        'requestNo' => 'requestNo',
        'merchantNo' => 'merchantNo',
        'divideApplicationStatus' => 'divideApplicationStatus',
        'publicAccountInfo' => 'publicAccountInfo',
        'receiverInfo' => 'receiverInfo'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'code' => 'setCode',
        'msg' => 'setMsg',
        'auditOpinion' => 'setAuditOpinion',
        'applicationStatus' => 'setApplicationStatus',
        'applicationNo' => 'setApplicationNo',
        'progressDescription' => 'setProgressDescription',
        'requestNo' => 'setRequestNo',
        'merchantNo' => 'setMerchantNo',
        'divideApplicationStatus' => 'setDivideApplicationStatus',
        'publicAccountInfo' => 'setPublicAccountInfo',
        'receiverInfo' => 'setReceiverInfo'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'code' => 'getCode',
        'msg' => 'getMsg',
        'auditOpinion' => 'getAuditOpinion',
        'applicationStatus' => 'getApplicationStatus',
        'applicationNo' => 'getApplicationNo',
        'progressDescription' => 'getProgressDescription',
        'requestNo' => 'getRequestNo',
        'merchantNo' => 'getMerchantNo',
        'divideApplicationStatus' => 'getDivideApplicationStatus',
        'publicAccountInfo' => 'getPublicAccountInfo',
        'receiverInfo' => 'getReceiverInfo'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['code'] = isset($data['code']) ? $data['code'] : null;
        $this->container['msg'] = isset($data['msg']) ? $data['msg'] : null;
        $this->container['auditOpinion'] = isset($data['auditOpinion']) ? $data['auditOpinion'] : null;
        $this->container['applicationStatus'] = isset($data['applicationStatus']) ? $data['applicationStatus'] : null;
        $this->container['applicationNo'] = isset($data['applicationNo']) ? $data['applicationNo'] : null;
        $this->container['progressDescription'] = isset($data['progressDescription']) ? $data['progressDescription'] : null;
        $this->container['requestNo'] = isset($data['requestNo']) ? $data['requestNo'] : null;
        $this->container['merchantNo'] = isset($data['merchantNo']) ? $data['merchantNo'] : null;
        $this->container['divideApplicationStatus'] = isset($data['divideApplicationStatus']) ? $data['divideApplicationStatus'] : null;
        $this->container['publicAccountInfo'] = isset($data['publicAccountInfo']) ? $data['publicAccountInfo'] : null;
        $this->container['receiverInfo'] = isset($data['receiverInfo']) ? $data['receiverInfo'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if ($this->container['code'] === null) {
            $invalidProperties[] = "'code' can't be null";
        }
        if ($this->container['msg'] === null) {
            $invalidProperties[] = "'msg' can't be null";
        }
        if ($this->container['applicationStatus'] === null) {
            $invalidProperties[] = "'applicationStatus' can't be null";
        }
        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets code
     *
     * @return string
     */
    public function getCode()
    {
        return $this->container['code'];
    }

    /**
     * Sets code
     *
     * @param string $code <p>响应码</p>
     *
     * @return $this
     */
    public function setCode($code)
    {
        $this->container['code'] = $code;

        return $this;
    }

    /**
     * Gets msg
     *
     * @return string
     */
    public function getMsg()
    {
        return $this->container['msg'];
    }

    /**
     * Sets msg
     *
     * @param string $msg <div data-page-id=\"OY64dHLw1o1F9Ex1aTIcfgg5nHf\" data-docx-has-block-data=\"false\"> <div class=\"ace-line ace-line old-record-id-TN98dklOiobUP5xHZGFc1MWJnyd\">响应消息</div> </div>
     *
     * @return $this
     */
    public function setMsg($msg)
    {
        $this->container['msg'] = $msg;

        return $this;
    }

    /**
     * Gets auditOpinion
     *
     * @return string
     */
    public function getAuditOpinion()
    {
        return $this->container['auditOpinion'];
    }

    /**
     * Sets auditOpinion
     *
     * @param string $auditOpinion <div data-page-id=\"OY64dHLw1o1F9Ex1aTIcfgg5nHf\" data-docx-has-block-data=\"false\"> <div class=\"ace-line ace-line old-record-id-WyUYdNf7ZoPuTrxsorGcANCjnCe\">审核意见</div> </div>
     *
     * @return $this
     */
    public function setAuditOpinion($auditOpinion)
    {
        $this->container['auditOpinion'] = $auditOpinion;

        return $this;
    }

    /**
     * Gets applicationStatus
     *
     * @return string
     */
    public function getApplicationStatus()
    {
        return $this->container['applicationStatus'];
    }

    /**
     * Sets applicationStatus
     *
     * @param string $applicationStatus <div data-page-id=\"OY64dHLw1o1F9Ex1aTIcfgg5nHf\" data-docx-has-block-data=\"false\"> <div class=\"ace-line ace-line old-record-id-RcVrd34w5oM3Wqx2nHaciagNnLc\">申请状态</div> <div class=\"ace-line ace-line old-record-id-RcVrd34w5oM3Wqx2nHaciagNnLc\"> <div data-page-id=\"OY64dHLw1o1F9Ex1aTIcfgg5nHf\" data-docx-has-block-data=\"false\"> <div class=\"ace-line ace-line old-record-id-BBrndQlMEoHX1vxHV18cg7t1nhg\">REVIEWING(申请审核中),</div> <div class=\"ace-line ace-line old-record-id-EJC6dwt7ZotCDkxUjAmcDtg2nqb\">REVIEW_BACK(申请已驳回),</div> <div class=\"ace-line ace-line old-record-id-BsoiddrwNoGuh7xayaocEmy2nkb\">AUTHENTICITY_VERIFYING(真实性验证中)</div> <div class=\"ace-line ace-line old-record-id-OCktdvpPmoqgrlxgUMzcSoeQn7i\">AGREEMENT_SIGNING(协议待签署),</div> <div class=\"ace-line ace-line old-record-id-X5tYdSXqmoYyIQxuvimcuPeDnjk\">BUSINESS_OPENING(业务开通中),</div> <div class=\"ace-line ace-line old-record-id-U799dQFG9otaXAxcQJFcRtZ4nZb\">COMPLETED(申请已完成)</div> </div> </div> </div>
     *
     * @return $this
     */
    public function setApplicationStatus($applicationStatus)
    {
        $this->container['applicationStatus'] = $applicationStatus;

        return $this;
    }

    /**
     * Gets applicationNo
     *
     * @return string
     */
    public function getApplicationNo()
    {
        return $this->container['applicationNo'];
    }

    /**
     * Sets applicationNo
     *
     * @param string $applicationNo <div data-page-id=\"OY64dHLw1o1F9Ex1aTIcfgg5nHf\" data-docx-has-block-data=\"false\"> <div class=\"ace-line ace-line old-record-id-MBNKdhVJvoHdAKxwX4TcEv7OnYf\">申请单编号</div> </div>
     *
     * @return $this
     */
    public function setApplicationNo($applicationNo)
    {
        $this->container['applicationNo'] = $applicationNo;

        return $this;
    }

    /**
     * Gets progressDescription
     *
     * @return string
     */
    public function getProgressDescription()
    {
        return $this->container['progressDescription'];
    }

    /**
     * Sets progressDescription
     *
     * @param string $progressDescription <div data-page-id=\"OY64dHLw1o1F9Ex1aTIcfgg5nHf\" data-docx-has-block-data=\"false\"> <div class=\"ace-line ace-line old-record-id-Do48dn0zyoekB6xmk2HcZm5inUe\">入网进度说明</div> <div class=\"ace-line ace-line old-record-id-Do48dn0zyoekB6xmk2HcZm5inUe\"> <div data-page-id=\"OY64dHLw1o1F9Ex1aTIcfgg5nHf\" data-docx-has-block-data=\"false\"> <div class=\"ace-line ace-line old-record-id-XaNPdqi8RoFLb8xVaB5cBPtBnEg\">当申请状态为AUTHENTICITY_VERIFYING(真实性验证中)时，返回的入网进度说明</div> </div> </div> </div>
     *
     * @return $this
     */
    public function setProgressDescription($progressDescription)
    {
        $this->container['progressDescription'] = $progressDescription;

        return $this;
    }

    /**
     * Gets requestNo
     *
     * @return string
     */
    public function getRequestNo()
    {
        return $this->container['requestNo'];
    }

    /**
     * Sets requestNo
     *
     * @param string $requestNo <p>入网请求号</p>
     *
     * @return $this
     */
    public function setRequestNo($requestNo)
    {
        $this->container['requestNo'] = $requestNo;

        return $this;
    }

    /**
     * Gets merchantNo
     *
     * @return string
     */
    public function getMerchantNo()
    {
        return $this->container['merchantNo'];
    }

    /**
     * Sets merchantNo
     *
     * @param string $merchantNo <div data-page-id=\"OY64dHLw1o1F9Ex1aTIcfgg5nHf\" data-docx-has-block-data=\"false\"> <div class=\"ace-line ace-line old-record-id-LvpydXfqRoVZVsxMXA4cOCRFnrf\">商户编号</div> </div>
     *
     * @return $this
     */
    public function setMerchantNo($merchantNo)
    {
        $this->container['merchantNo'] = $merchantNo;

        return $this;
    }

    /**
     * Gets divideApplicationStatus
     *
     * @return string
     */
    public function getDivideApplicationStatus()
    {
        return $this->container['divideApplicationStatus'];
    }

    /**
     * Sets divideApplicationStatus
     *
     * @param string $divideApplicationStatus <div data-page-id=\"OY64dHLw1o1F9Ex1aTIcfgg5nHf\" data-docx-has-block-data=\"true\"> <div> <div class=\"ace-line ace-line old-record-id-FxOadnSWSoBz7VxU7XfcOinnnhc\">分账设置状态</div> <div class=\"ace-line ace-line old-record-id-FxOadnSWSoBz7VxU7XfcOinnnhc\">用于查看入账方分账设置的整体状态，收单 分账模式下，分账设置成功后，才可以进行分账操作。每一个入账方的状态，可以在入账方信息中查看。<br />DIVIDE_PROCESS 分账设置中</div> <div class=\"ace-line ace-line old-record-id-XG7udmlkCowJ4wxGzapcBYDan8c\">DIVIDE_REVIEWING 分账资质审核中</div> <div class=\"ace-line ace-line old-record-id-Lts9dqv2eoBHE6x8BOycMrnZnyh\">DIVIDE_REVIEW_BACK 分账审核驳回</div> <div class=\"ace-line ace-line old-record-id-AxktdCn5zorJFHx49BEcdIzAnwh\">DIVIDE_SUCCESS 分账设置成功</div> </div> </div>
     *
     * @return $this
     */
    public function setDivideApplicationStatus($divideApplicationStatus)
    {
        $this->container['divideApplicationStatus'] = $divideApplicationStatus;

        return $this;
    }

    /**
     * Gets publicAccountInfo
     *
     * @return \Yeepay\Yop\Sdk\Service\Mer\Model\PublicAccountCallBackInfo
     */
    public function getPublicAccountInfo()
    {
        return $this->container['publicAccountInfo'];
    }

    /**
     * Sets publicAccountInfo
     *
     * @param \Yeepay\Yop\Sdk\Service\Mer\Model\PublicAccountCallBackInfo $publicAccountInfo publicAccountInfo
     *
     * @return $this
     */
    public function setPublicAccountInfo($publicAccountInfo)
    {
        $this->container['publicAccountInfo'] = $publicAccountInfo;

        return $this;
    }

    /**
     * Gets receiverInfo
     *
     * @return \Yeepay\Yop\Sdk\Service\Mer\Model\ReceiverCallbackInfo[]
     */
    public function getReceiverInfo()
    {
        return $this->container['receiverInfo'];
    }

    /**
     * Sets receiverInfo
     *
     * @param \Yeepay\Yop\Sdk\Service\Mer\Model\ReceiverCallbackInfo[] $receiverInfo <p>入账方信息<br />返回了入账方编号、基本信息和商户/入账方的签约链接。</p>
     *
     * @return $this
     */
    public function setReceiverInfo($receiverInfo)
    {
        $this->container['receiverInfo'] = $receiverInfo;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


