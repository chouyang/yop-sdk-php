<?php
/**
 * SettleRecordOrderQueryResponseDto
 *
 * PHP version 5
 *
 * @category Class
 * @package  Yeepay\Yop\Sdk\
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * 商户结算2.0
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.13
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Yeepay\Yop\Sdk\Service\Settle\Model;

use \ArrayAccess;
use Yeepay\Yop\Sdk\Model\ModelInterface;
use Yeepay\Yop\Sdk\Utils\ObjectSerializer;

/**
 * SettleRecordOrderQueryResponseDto Class Doc Comment
 *
 * @category Class
 * @description 查询结算到账情况返回参数
 * @package  Yeepay\Yop\Sdk\
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class SettleRecordOrderQueryResponseDto implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'SettleRecordOrderQueryResponseDto';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'code' => 'string',
        'message' => 'string',
        'settleMerchantNo' => 'string',
        'orderAmount' => 'float',
        'feeAmount' => 'float',
        'orderSettleAmount' => 'float',
        'settleRecordQueryDtos' => '\Yeepay\Yop\Sdk\Service\Settle\Model\SettleRecordQueryDto[]'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'code' => null,
        'message' => null,
        'settleMerchantNo' => null,
        'orderAmount' => null,
        'feeAmount' => null,
        'orderSettleAmount' => null,
        'settleRecordQueryDtos' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'code' => 'code',
        'message' => 'message',
        'settleMerchantNo' => 'settleMerchantNo',
        'orderAmount' => 'orderAmount',
        'feeAmount' => 'feeAmount',
        'orderSettleAmount' => 'orderSettleAmount',
        'settleRecordQueryDtos' => 'settleRecordQueryDtos'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'code' => 'setCode',
        'message' => 'setMessage',
        'settleMerchantNo' => 'setSettleMerchantNo',
        'orderAmount' => 'setOrderAmount',
        'feeAmount' => 'setFeeAmount',
        'orderSettleAmount' => 'setOrderSettleAmount',
        'settleRecordQueryDtos' => 'setSettleRecordQueryDtos'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'code' => 'getCode',
        'message' => 'getMessage',
        'settleMerchantNo' => 'getSettleMerchantNo',
        'orderAmount' => 'getOrderAmount',
        'feeAmount' => 'getFeeAmount',
        'orderSettleAmount' => 'getOrderSettleAmount',
        'settleRecordQueryDtos' => 'getSettleRecordQueryDtos'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['code'] = isset($data['code']) ? $data['code'] : null;
        $this->container['message'] = isset($data['message']) ? $data['message'] : null;
        $this->container['settleMerchantNo'] = isset($data['settleMerchantNo']) ? $data['settleMerchantNo'] : null;
        $this->container['orderAmount'] = isset($data['orderAmount']) ? $data['orderAmount'] : null;
        $this->container['feeAmount'] = isset($data['feeAmount']) ? $data['feeAmount'] : null;
        $this->container['orderSettleAmount'] = isset($data['orderSettleAmount']) ? $data['orderSettleAmount'] : null;
        $this->container['settleRecordQueryDtos'] = isset($data['settleRecordQueryDtos']) ? $data['settleRecordQueryDtos'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets code
     *
     * @return string
     */
    public function getCode()
    {
        return $this->container['code'];
    }

    /**
     * Sets code
     *
     * @param string $code 返回码
     *
     * @return $this
     */
    public function setCode($code)
    {
        $this->container['code'] = $code;

        return $this;
    }

    /**
     * Gets message
     *
     * @return string
     */
    public function getMessage()
    {
        return $this->container['message'];
    }

    /**
     * Sets message
     *
     * @param string $message 返回信息
     *
     * @return $this
     */
    public function setMessage($message)
    {
        $this->container['message'] = $message;

        return $this;
    }

    /**
     * Gets settleMerchantNo
     *
     * @return string
     */
    public function getSettleMerchantNo()
    {
        return $this->container['settleMerchantNo'];
    }

    /**
     * Sets settleMerchantNo
     *
     * @param string $settleMerchantNo <p>结算商户商编</p>
     *
     * @return $this
     */
    public function setSettleMerchantNo($settleMerchantNo)
    {
        $this->container['settleMerchantNo'] = $settleMerchantNo;

        return $this;
    }

    /**
     * Gets orderAmount
     *
     * @return float
     */
    public function getOrderAmount()
    {
        return $this->container['orderAmount'];
    }

    /**
     * Sets orderAmount
     *
     * @param float $orderAmount <p>订单金额</p>
     *
     * @return $this
     */
    public function setOrderAmount($orderAmount)
    {
        $this->container['orderAmount'] = $orderAmount;

        return $this;
    }

    /**
     * Gets feeAmount
     *
     * @return float
     */
    public function getFeeAmount()
    {
        return $this->container['feeAmount'];
    }

    /**
     * Sets feeAmount
     *
     * @param float $feeAmount <p>手续费金额</p>
     *
     * @return $this
     */
    public function setFeeAmount($feeAmount)
    {
        $this->container['feeAmount'] = $feeAmount;

        return $this;
    }

    /**
     * Gets orderSettleAmount
     *
     * @return float
     */
    public function getOrderSettleAmount()
    {
        return $this->container['orderSettleAmount'];
    }

    /**
     * Sets orderSettleAmount
     *
     * @param float $orderSettleAmount <p>参与结算金额</p>
     *
     * @return $this
     */
    public function setOrderSettleAmount($orderSettleAmount)
    {
        $this->container['orderSettleAmount'] = $orderSettleAmount;

        return $this;
    }

    /**
     * Gets settleRecordQueryDtos
     *
     * @return \Yeepay\Yop\Sdk\Service\Settle\Model\SettleRecordQueryDto[]
     */
    public function getSettleRecordQueryDtos()
    {
        return $this->container['settleRecordQueryDtos'];
    }

    /**
     * Sets settleRecordQueryDtos
     *
     * @param \Yeepay\Yop\Sdk\Service\Settle\Model\SettleRecordQueryDto[] $settleRecordQueryDtos settleRecordQueryDtos
     *
     * @return $this
     */
    public function setSettleRecordQueryDtos($settleRecordQueryDtos)
    {
        $this->container['settleRecordQueryDtos'] = $settleRecordQueryDtos;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


